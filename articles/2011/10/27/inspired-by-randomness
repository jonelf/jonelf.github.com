<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Inspired by randomness</title>
  <meta name="viewport" content="width=device-width; initial-scale=1.0;">
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="../../../../xml/rsd" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="../../../../xml/atom/article/6678/feed.xml" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="../../../../xml/rss20/article/6678/feed.xml" />
  <script src="../../../../javascripts/cookies.js?1170454372" type="text/javascript"></script>
  <script src="../../../../javascripts/prototype.js?1170454372" type="text/javascript"></script>
  <script src="../../../../javascripts/effects.js?1170454372" type="text/javascript"></script>
  <script src="../../../../javascripts/typo.js?1170454372" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="../../../../stylesheets/theme/application.css?1357773761" media="all" rel="Stylesheet" type="text/css" />
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-4453587-1");
pageTracker._trackPageview();
} catch(err) {}
</script>
</head>

<body>
<div id="container">
  <div id="header">
    <h1><span><a href="../../../../index.html">Alice, Bob, and Mallory</a></span></h1>
    <h2>metasyntactics</h2>
  </div>

  <div id="page">
    <div id="content">
      <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
       xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
    rdf:about=""
    dc:title="Inspired by randomness"
    dc:identifier="http://alicebobandmallory.com/articles/2011/10/27/inspired-by-randomness"
    dc:description="Inspired by Randomly not so random I decided to play around with the subject. Both Java and C# uses a &lt;a href=&quot;http://en.wikipedia.org/wiki/Linear_congruential_gene"
    dc:creator="jonelf"
    dc:date="2012-03-22T22:47:11+01:00" />
</rdf:RDF>
-->

<div class="post" onmouseover="if (getCookie('is_admin') == 'yes') { Element.show('admin_article'); }"  onmouseout="Element.hide('admin_article');" >
  <a href="http://alicebobandmallory.com/admin/content/edit/6678" class="admintools" id="admin_article" style="display: none">edit</a>
  <h2>Inspired by randomness</h2>
  <p class="auth">Posted by Jonas Elfström
  <span class="typo_date" title="Thu, 27 Oct 2011 21:19:00 GMT">Thu, 27 Oct 2011 21:19:00 GMT</span></p>
  <p>Inspired by <a href="http://vanillajava.blogspot.com/2011/10/randomly-no-so-random.html">Randomly not so random</a> I decided to play around with the subject.</p>

<p>Both Java and C# uses a <a href="http://en.wikipedia.org/wiki/Linear_congruential_generator">linear congruential generator</a> as their <a href="http://en.wikipedia.org/wiki/Pseudorandom_number_generator">pseudorandom number generators</a>. </p>

<blockquote>
    <p>The current implementation of the Random class is based on a modified version of Donald E. Knuth's subtractive random number generator algorithm."</p>
</blockquote>

<p>About System.Random at <a href="http://msdn.microsoft.com/en-us/library/system.random.aspx">MSDN</a>.</p>

<p>I tried to find information on what values Microsoft uses for the <em>m</em>, <em>a</em>, and <em>c</em> parameters in their <a href="http://en.wikipedia.org/wiki/Linear_congruential_generator">LGC</a> implementation but I failed to do so. </p>

<p>A good random number generator should have certain properties. </p>

<blockquote>
    <p>The German Federal Office for Information Security (BSI) has established four criteria for quality of deterministic random number generators. They are summarized here:<br/>
    K1 — A sequence of random numbers with a low probability of containing identical consecutive elements.  </p>
</blockquote>

<p>From the <a href="http://en.wikipedia.org/wiki/Pseudorandom_number_generator">pseudorandom number generator</a> article on Wikipedia. Let's see what we can do about that.</p>

<table class="CodeRay"><tr>
  <td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"><pre><a href="inspired-by-randomness#n1" name="n1">1</a>
<a href="inspired-by-randomness#n2" name="n2">2</a>
<a href="inspired-by-randomness#n3" name="n3">3</a>
<a href="inspired-by-randomness#n4" name="n4">4</a>
<a href="inspired-by-randomness#n5" name="n5">5</a>
</pre></td>
  <td class="code"><pre>var random = new Random(<span style="color:#00D">116793166</span>);
<span style="color:#080;font-weight:bold">for</span> (<span style="color:#0a5;font-weight:bold">int</span> i = <span style="color:#00D">0</span>; i &lt; <span style="color:#00D">9</span>; i++)
{
    Console.Write(random.Next(<span style="color:#00D">10</span>) + <span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">&quot;</span><span style="color:#D20"> </span><span style="color:#710">&quot;</span></span>);
}</pre></td>
</tr></table>

<p><br/></p>

<p>Outputs:</p>

<pre>
1 1 1 1 1 1 1 1 1
</pre>

<p>Did I just break the K1 criteria above? You know I didn't but you might be interested in how I found the seed number. It's easy but also quite computational intensive, that's why I used <a href="http://msdn.microsoft.com/en-us/library/system.threading.tasks.parallel.for.aspx">Parallel.For</a>.</p>

<table class="CodeRay"><tr>
  <td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"><pre><a href="inspired-by-randomness#n1" name="n1">1</a>
<a href="inspired-by-randomness#n2" name="n2">2</a>
<a href="inspired-by-randomness#n3" name="n3">3</a>
<a href="inspired-by-randomness#n4" name="n4">4</a>
<a href="inspired-by-randomness#n5" name="n5">5</a>
<a href="inspired-by-randomness#n6" name="n6">6</a>
<a href="inspired-by-randomness#n7" name="n7">7</a>
<a href="inspired-by-randomness#n8" name="n8">8</a>
<a href="inspired-by-randomness#n9" name="n9">9</a>
<strong><a href="inspired-by-randomness#n10" name="n10">10</a></strong>
<a href="inspired-by-randomness#n11" name="n11">11</a>
<a href="inspired-by-randomness#n12" name="n12">12</a>
</pre></td>
  <td class="code"><pre>Parallel.For(<span style="color:#00D">0</span>, <span style="color:#0a5;font-weight:bold">int</span>.MaxValue, i =&gt;
{
    var rnd = new Random(i);
    <span style="color:#0a5;font-weight:bold">bool</span> allSame = <span style="color:#069">true</span>;
    <span style="color:#080;font-weight:bold">for</span> (<span style="color:#0a5;font-weight:bold">int</span> j = <span style="color:#00D">0</span>; j &lt; <span style="color:#00D">9</span>; j++)
    {
        allSame = allSame &amp;&amp; rnd.Next(<span style="color:#00D">10</span>) == <span style="color:#00D">1</span>;
        <span style="color:#080;font-weight:bold">if</span> (!allSame) <span style="color:#080;font-weight:bold">break</span>;
    }
    <span style="color:#080;font-weight:bold">if</span> (allSame)
        Console.WriteLine(i); 
});</pre></td>
</tr></table>

<p><br/>
It took a couple of minutes for the number 116793166 to show up in my console.</p>

<p>To keep on playing I needed a random string generator. Mine looks like this.</p>

<table class="CodeRay"><tr>
  <td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"><pre><a href="inspired-by-randomness#n1" name="n1">1</a>
<a href="inspired-by-randomness#n2" name="n2">2</a>
<a href="inspired-by-randomness#n3" name="n3">3</a>
<a href="inspired-by-randomness#n4" name="n4">4</a>
<a href="inspired-by-randomness#n5" name="n5">5</a>
<a href="inspired-by-randomness#n6" name="n6">6</a>
<a href="inspired-by-randomness#n7" name="n7">7</a>
<a href="inspired-by-randomness#n8" name="n8">8</a>
<a href="inspired-by-randomness#n9" name="n9">9</a>
</pre></td>
  <td class="code"><pre>private <span style="color:#088;font-weight:bold">const</span> string _chars = <span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">&quot;</span><span style="color:#D20">abcdefghijklmnopqrstuvwxyz</span><span style="color:#710">&quot;</span></span>;

private <span style="color:#088;font-weight:bold">static</span> string RandomString(<span style="color:#0a5;font-weight:bold">int</span> size, Random rng)
{
    var buffer = new <span style="color:#0a5;font-weight:bold">char</span>[size];
    <span style="color:#080;font-weight:bold">for</span> (<span style="color:#0a5;font-weight:bold">int</span> i = <span style="color:#00D">0</span>; i &lt; size; i++)
        buffer[i] = _chars[rng.Next(_chars.Length)];
    <span style="color:#080;font-weight:bold">return</span> new string(buffer);
}</pre></td>
</tr></table>

<p><br/>
If the random generators were the same it looks like it should give the same result as <a href="http://vanillajava.blogspot.com/2011/10/randomly-no-so-random.html">the Java one</a> but <code>RandomString(5, new Random(-229985452))</code> returns <code>tfsld</code>. Either my RandomString method works different than the Java one or it's the case that Java and .NET has slightly different settings of their LGCs.</p>

<p>Mathematically there's an infinite amount of inputs that results in a returned <code>hello</code>, for instance 1382472294, but here we are limited by the size of our integers.</p>

<p>I found the seed 1382472294 with the following little method and loop</p>

<table class="CodeRay"><tr>
  <td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"><pre><a href="inspired-by-randomness#n1" name="n1">1</a>
<a href="inspired-by-randomness#n2" name="n2">2</a>
<a href="inspired-by-randomness#n3" name="n3">3</a>
<a href="inspired-by-randomness#n4" name="n4">4</a>
<a href="inspired-by-randomness#n5" name="n5">5</a>
<a href="inspired-by-randomness#n6" name="n6">6</a>
<a href="inspired-by-randomness#n7" name="n7">7</a>
<a href="inspired-by-randomness#n8" name="n8">8</a>
<a href="inspired-by-randomness#n9" name="n9">9</a>
<strong><a href="inspired-by-randomness#n10" name="n10">10</a></strong>
<a href="inspired-by-randomness#n11" name="n11">11</a>
<a href="inspired-by-randomness#n12" name="n12">12</a>
<a href="inspired-by-randomness#n13" name="n13">13</a>
<a href="inspired-by-randomness#n14" name="n14">14</a>
<a href="inspired-by-randomness#n15" name="n15">15</a>
<a href="inspired-by-randomness#n16" name="n16">16</a>
<a href="inspired-by-randomness#n17" name="n17">17</a>
<a href="inspired-by-randomness#n18" name="n18">18</a>
<a href="inspired-by-randomness#n19" name="n19">19</a>
<strong><a href="inspired-by-randomness#n20" name="n20">20</a></strong>
</pre></td>
  <td class="code"><pre>private <span style="color:#088;font-weight:bold">static</span> <span style="color:#0a5;font-weight:bold">bool</span> CompareToRandomString(string str, Random rng) 
{ 
    <span style="color:#080;font-weight:bold">for</span> (<span style="color:#0a5;font-weight:bold">int</span> i = <span style="color:#00D">0</span>; i &lt; str.Length; i++)
    {
        <span style="color:#080;font-weight:bold">if</span> (_chars[rng.Next(_chars.Length)] != str[i])
            <span style="color:#080;font-weight:bold">return</span> <span style="color:#069">false</span>;
    }
    <span style="color:#080;font-weight:bold">return</span> <span style="color:#069">true</span>;
}

...

<span style="color:#088;font-weight:bold">const</span> string lookingFor = <span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">&quot;</span><span style="color:#D20">hello</span><span style="color:#710">&quot;</span></span>;

Parallel.For(<span style="color:#00D">0</span>, <span style="color:#0a5;font-weight:bold">int</span>.MaxValue, i =&gt;
{
    var rnd = new Random(i);
    <span style="color:#080;font-weight:bold">if</span> (CompareToRandomString(lookingFor, rnd))
        Console.WriteLine(i);
});</pre></td>
</tr></table>

<p><br/>
I leave it up to you to implement a <a href="http://msdn.microsoft.com/en-us/library/dd460721.aspx">break</a> out of that loop.</p>

<p><a href="http://www.ruby-doc.org/core-1.9.2/Random.html">Ruby</a> does not use a LGC but a <a href="http://en.wikipedia.org/wiki/Mersenne_twister">Mersenne twister</a> instead. It's still only pseudorandom so there's no problem finding patterns you like and being able to repeat them.</p>

<table class="CodeRay"><tr>
  <td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"><pre><a href="inspired-by-randomness#n1" name="n1">1</a>
<a href="inspired-by-randomness#n2" name="n2">2</a>
</pre></td>
  <td class="code"><pre>srand(<span style="color:#00D">2570940381</span>)
<span style="color:#00D">9</span>.times { print <span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">&quot;</span><span style="color:#D20">%d </span><span style="color:#710">&quot;</span></span> % rand(<span style="color:#00D">10</span>) }</pre></td>
</tr></table>

<p>Outputs:<br/>
<code>1 2 3 4 5 6 7 8 9</code></p>

<table class="CodeRay"><tr>
  <td class="line-numbers" title="double click to toggle" ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }"><pre><a href="inspired-by-randomness#n1" name="n1">1</a>
<a href="inspired-by-randomness#n2" name="n2">2</a>
<a href="inspired-by-randomness#n3" name="n3">3</a>
</pre></td>
  <td class="code"><pre>charset=(<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">a</span><span style="color:#710">'</span></span>..<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">z</span><span style="color:#710">'</span></span>).to_a
srand(<span style="color:#00D">124931</span>)
puts (<span style="color:#00D">0</span>...<span style="color:#00D">4</span>).map{ charset.to_a[rand(charset.size)] }.join</pre></td>
</tr></table>

<p>Outputs:<br/>
<code>ruby</code></p>
</div>
<p class="meta">
  Posted in <a href="http://alicebobandmallory.com/articles/category/ruby" rel="noindex, follow, tag">Ruby</a>, <a href="http://alicebobandmallory.com/articles/category/c" rel="noindex, follow, tag">C#</a>, <a href="http://alicebobandmallory.com/articles/category/math" rel="noindex, follow, tag">Math</a>, <a href="http://alicebobandmallory.com/articles/category/java" rel="noindex, follow, tag">Java</a>&nbsp;<strong>|</strong>&nbsp;<a href="inspired-by-randomness#comments">1 comment</a>
</p>

  <a name="comments"></a><h4 class="blueblk">Comments</h4>
    <p class="postmetadata alt">
      <small><a href="inspired-by-randomness#respond">Comments closed</a></small>
    </p>
  <ol class="comment-list" id="commentList">
  
    <ol id="comments" class="comments">
  	<li class="comment" id="comment-7671">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=bab0fe306627458b1e9e077b6316bb40&amp;size=60" /></div>
	    <cite><a href="http://nicemusings.blogspot.com">Ian Best</a></cite>
		<abbr title="2012-03-22T10:52:35+01:00"><span class="typo_date" title="Thu, 22 Mar 2012 09:52:35 GMT">Thu, 22 Mar 2012 09:52:35 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>It was really interesting how you found the seed number. I will definitely implement a break out of the loop. There won&#8217;t be any issues finding patterns we like and repeat them.</p>
	  </div>
	</li>
	</ol>

  
  </ol>


<p class="postmetadata alt">
  <small>
  <a href="../../../../xml/rss20/article/6678/feed.xml" title="RSS Feed">RSS feed for this post</a>
  </small>
</p>


<p>Comments are closed</p>
<!--
  <p>Comments are disabled</p>
-->

      <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
    </div>

    <div id="sidebar">
      <!-- search -->
      <div id="search" class="search">
<!--	<form action="/articles/search" id="sform" method="get">
	  <p><input type="text" id="q" name="q" value="" /></p>
	</form>
	
	<div id="loading" class="loading" style="display:none;">Searching...</div>
	<div id="results" class="results"></div>
  <script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('loading')}, onLoading:function(request){Element.show('loading')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script>
-->
</div>


      <!-- sidebar components -->
      
      
<div class="sidebar-node">
  <h3></h3>
<a href="http://stackoverflow.com/users/44620/jonas-elfstrom">
<img src="http://stackoverflow.com/users/flair/44620.png" width="208" height="58" alt="Stack Overflow profile for Jonas Elfström" title="Stack Overflow profile for Jonas Elfström">
</a>
<ul>
<li><nobr><a href="../../../../pages/AboutMe">About me</a>/<a href="../../../../pages/OmMig">Om mig</a></nobr></li>
</ul>
<a href="https://gist.github.com/jonelf">Public Gists</a><br><a href="http://jonelf.posterous.com/">Posterous</a><br><br>
<b>Recommended reading</b><br/><a href="http://www.amazon.com/gp/product/0385495323?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0385495323">The Code Book</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0385495323" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
<br/>
<a href="http://www.amazon.com/gp/product/0385493622?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0385493622">Fermat's Enigma</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0385493622" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><br/>
<a href="http://www.amazon.com/gp/product/0399156828?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0399156828">Zero History</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0399156828" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><br/>
<a href="http://www.amazon.com/gp/product/0470474246?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0470474246">Cryptography Engineering</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0470474246" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
<br/><br/>

</div>


  


    </div>
    <br style="clear:both;" />
  </div>

  <div id="footer">
    <hr />
    <p><a href="../../../../index.html">Alice, Bob, and Mallory</a></p>
    <ul>
      <li>powered by <a href="http://typosphere.org">typo</a> /
          styled with <a href="http://quotedprintable.com/pages/scribbish">scribbish</a></li>
    </ul>
  </div>
</div>
</body>
</html>
