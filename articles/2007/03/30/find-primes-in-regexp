<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Find primes in regexp</title>
  <meta name="viewport" content="width=device-width; initial-scale=1.0;">
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="../../../../xml/rsd" />
  <link rel="alternate" type="application/atom+xml" title="Atom" href="../../../../xml/atom/article/26/feed.xml" />
  <link rel="alternate" type="application/rss+xml" title="RSS" href="../../../../xml/rss20/article/26/feed.xml" />
  <script src="../../../../javascripts/cookies.js?1170454372" type="text/javascript"></script>
  <script src="../../../../javascripts/prototype.js?1170454372" type="text/javascript"></script>
  <script src="../../../../javascripts/effects.js?1170454372" type="text/javascript"></script>
  <script src="../../../../javascripts/typo.js?1170454372" type="text/javascript"></script>
  
  <script type="text/javascript"></script>
  <link href="../../../../stylesheets/theme/application.css?1357773761" media="all" rel="Stylesheet" type="text/css" />
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-4453587-1");
pageTracker._trackPageview();
} catch(err) {}
</script>
</head>

<body>
<div id="container">
  <div id="header">
    <h1><span><a href="../../../../index.html">Alice, Bob, and Mallory</a></span></h1>
    <h2>metasyntactics</h2>
  </div>

  <div id="page">
    <div id="content">
      <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
       xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
    rdf:about=""
    dc:title="Find primes in regexp"
    dc:identifier="http://alicebobandmallory.com/articles/2007/03/30/find-primes-in-regexp"
    dc:description="In an earlier post the example code did find prime numbers. Recently I stumbled over"
    dc:creator="jonelf"
    dc:date="2011-04-06T10:40:28+02:00" />
</rdf:RDF>
-->

<div class="post" onmouseover="if (getCookie('is_admin') == 'yes') { Element.show('admin_article'); }"  onmouseout="Element.hide('admin_article');" >
  <a href="http://alicebobandmallory.com/admin/content/edit/26" class="admintools" id="admin_article" style="display: none">edit</a>
  <h2>Find primes in regexp</h2>
  <p class="auth">Posted by Jonas Elfström
  <span class="typo_date" title="Fri, 30 Mar 2007 05:33:00 GMT">Fri, 30 Mar 2007 05:33:00 GMT</span></p>
  <p>In an earlier <a href="../../02/09/setl-ruby-and-list-comprehensions">post</a> the example code did find prime numbers. Recently I <a href="http://groups.google.com/group/ruby-talk-google/browse_thread/thread/3deebb518a454bc4">stumbled</a> over a really cool regexp hack that also deals with primes. This is how you execute that regexp in Ruby:</p>

<div class="typocode"><pre><code class="typocode_ruby "><span class="ident">puts</span> <span class="punct">'</span><span class="string">Prime</span><span class="punct">'</span> <span class="keyword">unless</span> <span class="punct">('</span><span class="string">1</span><span class="punct">'</span> <span class="punct">*</span> <span class="number">43</span><span class="punct">)</span> <span class="punct">=~</span> <span class="punct">/</span><span class="regex">^1$|^(11+?)<span class="escape">\1</span>+$</span><span class="punct">/</span></code></pre></div>

<p>Change 43 to whatever you like and you will get Prime as output if it's a prime number.
<br>
<br>
<strong>EDIT:</strong> As you can see in the comments <a href="http://montreal.pm.org/tech/neil_kandalgaonkar.shtml">Neil Kandalonkar</a> explained how the regexp by Abigail works.</p>

<p><strong>EDIT 2011-04-06:</strong>
I happened to stumble upon what I believe is the first time Abigail showed this to the world. It's in <a href="http://groups.google.com/group/comp.lang.perl.misc/msg/149b99453d113730">a post</a> in comp.lang.perl.misc back in 1997.
I also found that at <a href="http://www.cpan.org/misc/japh">http://www.cpan.org/misc/japh</a> there's a couple more</p>

<div class="typocode"><pre><code class="typocode_ruby "><span class="ident">perl</span> <span class="punct">-</span><span class="ident">wle</span> <span class="punct">'</span><span class="string">print &quot;Prime&quot; if (0 x shift) !~ m 0^\0?$|^(\0\0+?)\1+$0</span><span class="punct">'</span>
<span class="ident">perl</span> <span class="punct">-</span><span class="ident">wle</span> <span class="punct">'</span><span class="string">print &quot;Prime&quot; if (&quot;m&quot; x shift) !~ m m^\m?$|^(\m\m+?)\1+$mm</span><span class="punct">'</span></code></pre></div>
</div>
<p class="meta">
  Posted in <a href="http://alicebobandmallory.com/articles/category/ruby" rel="noindex, follow, tag">Ruby</a>, <a href="http://alicebobandmallory.com/articles/category/math" rel="noindex, follow, tag">Math</a>&nbsp;<strong>|</strong>&nbsp;<a href="find-primes-in-regexp#comments">6 comments</a>
</p>

  <a name="comments"></a><h4 class="blueblk">Comments</h4>
    <p class="postmetadata alt">
      <small><a href="find-primes-in-regexp#respond">Comments closed</a></small>
    </p>
  <ol class="comment-list" id="commentList">
  
    <ol id="comments" class="comments">
  	<li class="comment" id="comment-690">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Neil Kandalgaonkar</cite>
		<abbr title="2007-05-26T22:43:37+02:00"><span class="typo_date" title="Sat, 26 May 2007 20:43:37 GMT">Sat, 26 May 2007 20:43:37 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>As the page makes clear, credit should go to Abigail. I merely explained it.</p>
	  </div>
	</li>
		<li class="comment" id="comment-691">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2007-05-28T00:53:36+02:00"><span class="typo_date" title="Sun, 27 May 2007 22:53:36 GMT">Sun, 27 May 2007 22:53:36 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Sorry, now it has been corrected.</p>
	  </div>
	</li>
		<li class="comment" id="comment-3609">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2009-09-20T23:07:14+02:00"><span class="typo_date" title="Sun, 20 Sep 2009 21:07:14 GMT">Sun, 20 Sep 2009 21:07:14 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Seems Neils site has gone missing. Here&#8217;s another nice explanation: <a href="http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html">http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-3931">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-01-18T21:46:43+01:00"><span class="typo_date" title="Mon, 18 Jan 2010 20:46:43 GMT">Mon, 18 Jan 2010 20:46:43 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546">http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546</a></p>

<p>And it was created by <a href="http://www.abigail.be/">http://www.abigail.be/</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-4220">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-08-04T09:44:05+02:00"><span class="typo_date" title="Wed, 04 Aug 2010 07:44:05 GMT">Wed, 04 Aug 2010 07:44:05 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://zmievski.org/2010/08/the-prime-that-wasnt">The prime that wasn&#8217;t</a> - explains how it works, it&#8217;s inefficiency and why PHP reported 22201 as prime. </p>

<p>The Ruby implementation of RegEx differs in that aspect but I don&#8217;t know if it has a set limit or if it&#8217;s just limited to virtual memory of the machine.</p>

<pre><code>&gt; ('1' * 222201) =~ /^1$|^(11+?)\1+$/
=&gt; 0
&gt; ('1' * 222199) =~ /^1$|^(11+?)\1+$/
=&gt; nil
</code></pre>

<p>222201 is not prime but 222199 is and that is what the above shows. The second expression took a couple of minutes to run.</p>
	  </div>
	</li>
		<li class="comment" id="comment-7166">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2012-01-12T12:59:13+01:00"><span class="typo_date" title="Thu, 12 Jan 2012 11:59:13 GMT">Thu, 12 Jan 2012 11:59:13 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Peteris Krumins explanation of how this works can be found at <a href="http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/">http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/</a></p>
	  </div>
	</li>
	</ol>
<ol id="comments" class="comments">
  	<li class="comment" id="comment-690">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Neil Kandalgaonkar</cite>
		<abbr title="2007-05-26T22:43:37+02:00"><span class="typo_date" title="Sat, 26 May 2007 20:43:37 GMT">Sat, 26 May 2007 20:43:37 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>As the page makes clear, credit should go to Abigail. I merely explained it.</p>
	  </div>
	</li>
		<li class="comment" id="comment-691">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2007-05-28T00:53:36+02:00"><span class="typo_date" title="Sun, 27 May 2007 22:53:36 GMT">Sun, 27 May 2007 22:53:36 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Sorry, now it has been corrected.</p>
	  </div>
	</li>
		<li class="comment" id="comment-3609">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2009-09-20T23:07:14+02:00"><span class="typo_date" title="Sun, 20 Sep 2009 21:07:14 GMT">Sun, 20 Sep 2009 21:07:14 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Seems Neils site has gone missing. Here&#8217;s another nice explanation: <a href="http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html">http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-3931">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-01-18T21:46:43+01:00"><span class="typo_date" title="Mon, 18 Jan 2010 20:46:43 GMT">Mon, 18 Jan 2010 20:46:43 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546">http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546</a></p>

<p>And it was created by <a href="http://www.abigail.be/">http://www.abigail.be/</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-4220">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-08-04T09:44:05+02:00"><span class="typo_date" title="Wed, 04 Aug 2010 07:44:05 GMT">Wed, 04 Aug 2010 07:44:05 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://zmievski.org/2010/08/the-prime-that-wasnt">The prime that wasn&#8217;t</a> - explains how it works, it&#8217;s inefficiency and why PHP reported 22201 as prime. </p>

<p>The Ruby implementation of RegEx differs in that aspect but I don&#8217;t know if it has a set limit or if it&#8217;s just limited to virtual memory of the machine.</p>

<pre><code>&gt; ('1' * 222201) =~ /^1$|^(11+?)\1+$/
=&gt; 0
&gt; ('1' * 222199) =~ /^1$|^(11+?)\1+$/
=&gt; nil
</code></pre>

<p>222201 is not prime but 222199 is and that is what the above shows. The second expression took a couple of minutes to run.</p>
	  </div>
	</li>
		<li class="comment" id="comment-7166">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2012-01-12T12:59:13+01:00"><span class="typo_date" title="Thu, 12 Jan 2012 11:59:13 GMT">Thu, 12 Jan 2012 11:59:13 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Peteris Krumins explanation of how this works can be found at <a href="http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/">http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/</a></p>
	  </div>
	</li>
	</ol>
<ol id="comments" class="comments">
  	<li class="comment" id="comment-690">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Neil Kandalgaonkar</cite>
		<abbr title="2007-05-26T22:43:37+02:00"><span class="typo_date" title="Sat, 26 May 2007 20:43:37 GMT">Sat, 26 May 2007 20:43:37 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>As the page makes clear, credit should go to Abigail. I merely explained it.</p>
	  </div>
	</li>
		<li class="comment" id="comment-691">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2007-05-28T00:53:36+02:00"><span class="typo_date" title="Sun, 27 May 2007 22:53:36 GMT">Sun, 27 May 2007 22:53:36 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Sorry, now it has been corrected.</p>
	  </div>
	</li>
		<li class="comment" id="comment-3609">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2009-09-20T23:07:14+02:00"><span class="typo_date" title="Sun, 20 Sep 2009 21:07:14 GMT">Sun, 20 Sep 2009 21:07:14 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Seems Neils site has gone missing. Here&#8217;s another nice explanation: <a href="http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html">http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-3931">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-01-18T21:46:43+01:00"><span class="typo_date" title="Mon, 18 Jan 2010 20:46:43 GMT">Mon, 18 Jan 2010 20:46:43 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546">http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546</a></p>

<p>And it was created by <a href="http://www.abigail.be/">http://www.abigail.be/</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-4220">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-08-04T09:44:05+02:00"><span class="typo_date" title="Wed, 04 Aug 2010 07:44:05 GMT">Wed, 04 Aug 2010 07:44:05 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://zmievski.org/2010/08/the-prime-that-wasnt">The prime that wasn&#8217;t</a> - explains how it works, it&#8217;s inefficiency and why PHP reported 22201 as prime. </p>

<p>The Ruby implementation of RegEx differs in that aspect but I don&#8217;t know if it has a set limit or if it&#8217;s just limited to virtual memory of the machine.</p>

<pre><code>&gt; ('1' * 222201) =~ /^1$|^(11+?)\1+$/
=&gt; 0
&gt; ('1' * 222199) =~ /^1$|^(11+?)\1+$/
=&gt; nil
</code></pre>

<p>222201 is not prime but 222199 is and that is what the above shows. The second expression took a couple of minutes to run.</p>
	  </div>
	</li>
		<li class="comment" id="comment-7166">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2012-01-12T12:59:13+01:00"><span class="typo_date" title="Thu, 12 Jan 2012 11:59:13 GMT">Thu, 12 Jan 2012 11:59:13 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Peteris Krumins explanation of how this works can be found at <a href="http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/">http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/</a></p>
	  </div>
	</li>
	</ol>
<ol id="comments" class="comments">
  	<li class="comment" id="comment-690">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Neil Kandalgaonkar</cite>
		<abbr title="2007-05-26T22:43:37+02:00"><span class="typo_date" title="Sat, 26 May 2007 20:43:37 GMT">Sat, 26 May 2007 20:43:37 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>As the page makes clear, credit should go to Abigail. I merely explained it.</p>
	  </div>
	</li>
		<li class="comment" id="comment-691">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2007-05-28T00:53:36+02:00"><span class="typo_date" title="Sun, 27 May 2007 22:53:36 GMT">Sun, 27 May 2007 22:53:36 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Sorry, now it has been corrected.</p>
	  </div>
	</li>
		<li class="comment" id="comment-3609">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2009-09-20T23:07:14+02:00"><span class="typo_date" title="Sun, 20 Sep 2009 21:07:14 GMT">Sun, 20 Sep 2009 21:07:14 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Seems Neils site has gone missing. Here&#8217;s another nice explanation: <a href="http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html">http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-3931">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-01-18T21:46:43+01:00"><span class="typo_date" title="Mon, 18 Jan 2010 20:46:43 GMT">Mon, 18 Jan 2010 20:46:43 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546">http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546</a></p>

<p>And it was created by <a href="http://www.abigail.be/">http://www.abigail.be/</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-4220">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-08-04T09:44:05+02:00"><span class="typo_date" title="Wed, 04 Aug 2010 07:44:05 GMT">Wed, 04 Aug 2010 07:44:05 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://zmievski.org/2010/08/the-prime-that-wasnt">The prime that wasn&#8217;t</a> - explains how it works, it&#8217;s inefficiency and why PHP reported 22201 as prime. </p>

<p>The Ruby implementation of RegEx differs in that aspect but I don&#8217;t know if it has a set limit or if it&#8217;s just limited to virtual memory of the machine.</p>

<pre><code>&gt; ('1' * 222201) =~ /^1$|^(11+?)\1+$/
=&gt; 0
&gt; ('1' * 222199) =~ /^1$|^(11+?)\1+$/
=&gt; nil
</code></pre>

<p>222201 is not prime but 222199 is and that is what the above shows. The second expression took a couple of minutes to run.</p>
	  </div>
	</li>
		<li class="comment" id="comment-7166">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2012-01-12T12:59:13+01:00"><span class="typo_date" title="Thu, 12 Jan 2012 11:59:13 GMT">Thu, 12 Jan 2012 11:59:13 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Peteris Krumins explanation of how this works can be found at <a href="http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/">http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/</a></p>
	  </div>
	</li>
	</ol>
<ol id="comments" class="comments">
  	<li class="comment" id="comment-690">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Neil Kandalgaonkar</cite>
		<abbr title="2007-05-26T22:43:37+02:00"><span class="typo_date" title="Sat, 26 May 2007 20:43:37 GMT">Sat, 26 May 2007 20:43:37 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>As the page makes clear, credit should go to Abigail. I merely explained it.</p>
	  </div>
	</li>
		<li class="comment" id="comment-691">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2007-05-28T00:53:36+02:00"><span class="typo_date" title="Sun, 27 May 2007 22:53:36 GMT">Sun, 27 May 2007 22:53:36 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Sorry, now it has been corrected.</p>
	  </div>
	</li>
		<li class="comment" id="comment-3609">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2009-09-20T23:07:14+02:00"><span class="typo_date" title="Sun, 20 Sep 2009 21:07:14 GMT">Sun, 20 Sep 2009 21:07:14 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Seems Neils site has gone missing. Here&#8217;s another nice explanation: <a href="http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html">http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-3931">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-01-18T21:46:43+01:00"><span class="typo_date" title="Mon, 18 Jan 2010 20:46:43 GMT">Mon, 18 Jan 2010 20:46:43 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546">http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546</a></p>

<p>And it was created by <a href="http://www.abigail.be/">http://www.abigail.be/</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-4220">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-08-04T09:44:05+02:00"><span class="typo_date" title="Wed, 04 Aug 2010 07:44:05 GMT">Wed, 04 Aug 2010 07:44:05 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://zmievski.org/2010/08/the-prime-that-wasnt">The prime that wasn&#8217;t</a> - explains how it works, it&#8217;s inefficiency and why PHP reported 22201 as prime. </p>

<p>The Ruby implementation of RegEx differs in that aspect but I don&#8217;t know if it has a set limit or if it&#8217;s just limited to virtual memory of the machine.</p>

<pre><code>&gt; ('1' * 222201) =~ /^1$|^(11+?)\1+$/
=&gt; 0
&gt; ('1' * 222199) =~ /^1$|^(11+?)\1+$/
=&gt; nil
</code></pre>

<p>222201 is not prime but 222199 is and that is what the above shows. The second expression took a couple of minutes to run.</p>
	  </div>
	</li>
		<li class="comment" id="comment-7166">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2012-01-12T12:59:13+01:00"><span class="typo_date" title="Thu, 12 Jan 2012 11:59:13 GMT">Thu, 12 Jan 2012 11:59:13 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Peteris Krumins explanation of how this works can be found at <a href="http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/">http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/</a></p>
	  </div>
	</li>
	</ol>
<ol id="comments" class="comments">
  	<li class="comment" id="comment-690">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Neil Kandalgaonkar</cite>
		<abbr title="2007-05-26T22:43:37+02:00"><span class="typo_date" title="Sat, 26 May 2007 20:43:37 GMT">Sat, 26 May 2007 20:43:37 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>As the page makes clear, credit should go to Abigail. I merely explained it.</p>
	  </div>
	</li>
		<li class="comment" id="comment-691">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2007-05-28T00:53:36+02:00"><span class="typo_date" title="Sun, 27 May 2007 22:53:36 GMT">Sun, 27 May 2007 22:53:36 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Sorry, now it has been corrected.</p>
	  </div>
	</li>
		<li class="comment" id="comment-3609">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2009-09-20T23:07:14+02:00"><span class="typo_date" title="Sun, 20 Sep 2009 21:07:14 GMT">Sun, 20 Sep 2009 21:07:14 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Seems Neils site has gone missing. Here&#8217;s another nice explanation: <a href="http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html">http://paddy3118.blogspot.com/2009/08/story-of-regexp-and-primes.html</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-3931">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-01-18T21:46:43+01:00"><span class="typo_date" title="Mon, 18 Jan 2010 20:46:43 GMT">Mon, 18 Jan 2010 20:46:43 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546">http://stackoverflow.com/questions/20448/what-is-the-most-brilliant-regex-youve-ever-used/20546#20546</a></p>

<p>And it was created by <a href="http://www.abigail.be/">http://www.abigail.be/</a></p>
	  </div>
	</li>
		<li class="comment" id="comment-4220">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2010-08-04T09:44:05+02:00"><span class="typo_date" title="Wed, 04 Aug 2010 07:44:05 GMT">Wed, 04 Aug 2010 07:44:05 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p><a href="http://zmievski.org/2010/08/the-prime-that-wasnt">The prime that wasn&#8217;t</a> - explains how it works, it&#8217;s inefficiency and why PHP reported 22201 as prime. </p>

<p>The Ruby implementation of RegEx differs in that aspect but I don&#8217;t know if it has a set limit or if it&#8217;s just limited to virtual memory of the machine.</p>

<pre><code>&gt; ('1' * 222201) =~ /^1$|^(11+?)\1+$/
=&gt; 0
&gt; ('1' * 222199) =~ /^1$|^(11+?)\1+$/
=&gt; nil
</code></pre>

<p>222201 is not prime but 222199 is and that is what the above shows. The second expression took a couple of minutes to run.</p>
	  </div>
	</li>
		<li class="comment" id="comment-7166">
	  <div class="author">
	    <div><img alt="Avatar" class="gravatar" src="http://www.gravatar.com/avatar.php?gravatar_id=9e36aeb20f1b4a763043d3ce4942b454&amp;size=60" /></div>
	    <cite>Jonas Elfström</cite>
		<abbr title="2012-01-12T12:59:13+01:00"><span class="typo_date" title="Thu, 12 Jan 2012 11:59:13 GMT">Thu, 12 Jan 2012 11:59:13 GMT</span></abbr>
	  </div>
	  <div class="content">
	    <p>Peteris Krumins explanation of how this works can be found at <a href="http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/">http://www.catonmat.net/blog/perl-regex-that-matches-prime-numbers/</a></p>
	  </div>
	</li>
	</ol>

  
  </ol>


<p class="postmetadata alt">
  <small>
  <a href="../../../../xml/rss20/article/26/feed.xml" title="RSS Feed">RSS feed for this post</a>
  </small>
</p>


<p>Comments are closed</p>
<!--
  <p>Comments are disabled</p>
-->

      <script type="text/javascript">
//<![CDATA[
show_dates_as_local_time()
//]]>
</script>
    </div>

    <div id="sidebar">
      <!-- search -->
      <div id="search" class="search">
<!--	<form action="/articles/search" id="sform" method="get">
	  <p><input type="text" id="q" name="q" value="" /></p>
	</form>
	
	<div id="loading" class="loading" style="display:none;">Searching...</div>
	<div id="results" class="results"></div>
  <script type="text/javascript">
//<![CDATA[
new Form.Element.Observer('q', 1, function(element, value) {new Ajax.Updater('results', '/live/search', {asynchronous:true, evalScripts:true, onComplete:function(request){Element.hide('loading')}, onLoading:function(request){Element.show('loading')}, parameters:'q=' + escape($F('q'))})})
//]]>
</script>
-->
</div>


      <!-- sidebar components -->
      
      
<div class="sidebar-node">
  <h3></h3>
<a href="http://stackoverflow.com/users/44620/jonas-elfstrom">
<img src="http://stackoverflow.com/users/flair/44620.png" width="208" height="58" alt="Stack Overflow profile for Jonas Elfström" title="Stack Overflow profile for Jonas Elfström">
</a>
<ul>
<li><nobr><a href="../../../../pages/AboutMe">About me</a>/<a href="../../../../pages/OmMig">Om mig</a></nobr></li>
</ul>
<a href="https://gist.github.com/jonelf">Public Gists</a><br><a href="http://jonelf.posterous.com/">Posterous</a><br><br>
<b>Recommended reading</b><br/><a href="http://www.amazon.com/gp/product/0385495323?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0385495323">The Code Book</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0385495323" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
<br/>
<a href="http://www.amazon.com/gp/product/0385493622?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0385493622">Fermat's Enigma</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0385493622" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><br/>
<a href="http://www.amazon.com/gp/product/0399156828?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0399156828">Zero History</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0399156828" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /><br/>
<a href="http://www.amazon.com/gp/product/0470474246?ie=UTF8&tag=alibobandmal-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0470474246">Cryptography Engineering</a><img src="http://www.assoc-amazon.com/e/ir?t=alibobandmal-20&l=as2&o=1&a=0470474246" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
<br/><br/>

</div>


  


    </div>
    <br style="clear:both;" />
  </div>

  <div id="footer">
    <hr />
    <p><a href="../../../../index.html">Alice, Bob, and Mallory</a></p>
    <ul>
      <li>powered by <a href="http://typosphere.org">typo</a> /
          styled with <a href="http://quotedprintable.com/pages/scribbish">scribbish</a></li>
    </ul>
  </div>
</div>
</body>
</html>
